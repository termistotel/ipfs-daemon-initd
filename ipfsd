#!/bin/sh
# This file is a part of the ipfs-daemon-initd project, and is licensed under 
# the MIT license
# Copyright 2015 Jeff Cochran
#
### BEGIN INIT INFO
# Provides:          ipfs-daemon 
# Required-Start:    $remote_fs $network $named $syslog
# Required-Stop:     $remote_fs $network $named $syslog
# Should-Start:      iptables ip6tables firewalld
# Should-Stop:       $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/Stop IPFS Daemon
# Description:       Starts or stops the IPFS Daemon with watchdogging
### END INIT INFO

dir="/ipfsd"
bin_path=`sed -n -e 's/^.*IPFS_BIN_PATH=//p' /etc/ipfsd.conf`
cmd="$bin_path daemon"
user="ipfsd"

name=`basename $0`
pid_file="/var/run/$name.pid"
tmp_file="/tmp/$name.pid"
log_file="$dir/$name.log"

as_user() {
  if [ "$ME" == "$user" ] ; then
    /bin/bash -c "$1"
  else
    su - $user -c "$1"
  fi
}

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        cd "$dir"
        # HOME="$dir"
	    # sudo -u "$user" /bin/sh -c 'echo $$>'"$tmp_file"' && exec '"$cmd"' 2>&1 >>'"$log_file" &
        as_user 'echo $$>'"$tmp_file"' && exec '"$cmd"' 2>&1 >>'"$log_file" &
  	sleep 5
	mv $tmp_file $pid_file
        if ! is_running; then
            echo "Unable to start $name"
            exit 1
        fi
    fi
    ;;
    mount)
    if is_running; then
        echo "Mounting ipfs..."
        # HOME="/ipfsd"
        # sudo -u "$user" /bin/bash -c 'ipfs mount'
        as_user 'ipfs mount'
    else
        echo "Start ipfs first"
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
        kill -9 `get_pid`
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|media|restart|status}"
    exit 1
    ;;
esac

exit 0
